mixin pictureJpgWebp(filename, width, height, altText, cssClass, lazy)
  picture
    source(type="image/webp", srcset= `./img/${filename}@1x.webp 1x,./img/${filename}@2x.webp 2x`)
    img(class= cssClass, src= `./img/${filename}@1x.jpeg`, srcset=`./img/${filename}@2x.jpeg 2x`, width=width, height=height, alt= altText loading=lazy)

mixin picturePngWebp(filename, width, height, altText, cssClass, lazy)
  picture
    source(type="image/webp", srcset= `./img/${filename}@1x.webp 1x,./img/${filename}@2x.webp 2x`)
    img(class= cssClass, src= `./img/${filename}@1x.png`, srcset=`./img/${filename}@2x.png 2x`, width=width, height=height, alt= altText loading=lazy)

mixin simpleButton(text, additionalClassesArray, href)
  - const cssClass = 'button ' + additionalClassesArray.join(' ');
  - const linkHref = href ? href : '#';
  a(class= cssClass, href= linkHref)= text

mixin formInput({ inputName, inputType, placeholder, label, cols, rows, optionsArray, isRequired, isHidden })
  if isHidden !== true
    label.visuallyhidden(for= inputName)= label
  if inputType === 'textarea'
    textarea(id= inputName, name= inputName, cols= cols, rows= rows, placeholder= placeholder, required= isRequired, hidden= isHidden)&attributes(attributes)
  else if inputType === 'select'
    select(id= inputName, name= inputName, required= isRequired)&attributes(attributes)
      option(label= placeholder)
      each optionItem in optionsArray
        option= optionItem
  else if inputType === 'file'
    label= label
      input(id= inputName, type= inputType, name= inputName, required= isRequired, hidden= isHidden)&attributes(attributes)
  else
    input(id= inputName, type= inputType, name= inputName, placeholder= placeholder, required= isRequired, hidden= isHidden)&attributes(attributes)
